{"version":3,"sources":["services/images-api.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","App.js","index.js"],"names":["imagesApi","fetchImages","query","page","pageSize","axios","get","SearchBar","state","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","type","onClick","this","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","imageURL","alt","id","ImageGallery","handleImageClick","onImageClick","target","images","map","webformatURL","Button","App","color","height","width","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","window","addEventListener","removeEventListener","createPortal","img","isLoading","showModal","currentImg","onChangeQuery","options","then","response","prevState","data","hits","catch","error","console","log","finally","onLoadMoreButtonShow","length","toggleModal","index","filter","Number","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","largeImageURL","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7a7c91b4.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst ApiKey = \"19902573-b9fa82d62327bd625e4b4b636\";\r\n\r\n// axios.defaults.headers.common[\"Authorization\"] =\r\n//   \"Bearer 19902573-b9fa82d62327bd625e4b4b636\";\r\n\r\nconst fetchImages = ({ query = \"\", page = 1, pageSize = 12 }) => {\r\n  return axios.get(\r\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=${ApiKey}&image_type=photo&orientation=horizontal&per_page=${pageSize}`\r\n  );\r\n};\r\n\r\nconst imagesApi = { fetchImages };\r\n\r\nexport default imagesApi;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Searchbar.css\";\r\n\r\nclass SearchBar extends Component {\r\n  state = { query: \"\" };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ query: event.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"SearchForm-button\"\r\n            onClick={this.handleSubmit}\r\n          >\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ImageGalleryItem.css\";\r\n\r\nclass ImageGalleryItem extends Component {\r\n  render() {\r\n    return (\r\n      <li>\r\n        <img\r\n          src={this.props.imageURL}\r\n          alt=\"\"\r\n          className=\"ImageGalleryItem-image\"\r\n          id={this.props.id}\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  imageURL: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ImageGallery.css\";\r\n\r\nclass ImageGallery extends Component {\r\n  handleImageClick = (event) => {\r\n    this.props.onImageClick(event.target.id);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"ImageGallery\" onClick={this.handleImageClick}>\r\n        {this.props.images.map(({ id, webformatURL }) => (\r\n          <ImageGalleryItem key={id} imageURL={webformatURL} id={id} />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  onImageClick: PropTypes.func.isRequired,\r\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Button.css\";\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    return (\r\n      <button\r\n        type=\"submit\"\r\n        className=\"LoadMore-button\"\r\n        onClick={this.props.onSubmit}\r\n      >\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport \"./Loader.css\";\r\n\r\nexport default class App extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <div className=\"Loader-container\">\r\n        <Loader\r\n          type=\"TailSpin\"\r\n          color=\"#00BFFF\"\r\n          height={80}\r\n          width={80}\r\n          // timeout={3000}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Modal.css\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (event) => {\r\n    if (event.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (event) => {\r\n    if (event.target === event.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.img} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  img: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport imagesApi from \"./services/images-api\";\nimport SearchBar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Button from \"./components/Button/Button\";\nimport Loader from \"./components/Loader/Loader\";\nimport Modal from \"./components/Modal/Modal\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    page: 1,\n    query: \"\",\n    isLoading: false,\n    showModal: false,\n    currentImg: [],\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.fetchImages();\n    }\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  }\n\n  onChangeQuery = (query) => {\n    this.setState({ query: query, page: 1, images: [] });\n  };\n\n  fetchImages = () => {\n    const { query, page } = this.state;\n    const options = { query, page };\n\n    this.setState({ isLoading: true });\n\n    imagesApi\n      .fetchImages(options)\n      .then((response) =>\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...response.data.hits],\n          page: prevState.page + 1,\n        }))\n      )\n      .catch((error) => console.log(error))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  onLoadMoreButtonShow = () => {\n    return this.state.images.length > 0;\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  handleImageClick = (index) => {\n    this.setState({\n      currentImg: this.state.images.filter(({ id }) => id === Number(index)),\n    });\n    this.toggleModal();\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchBar onSubmit={this.onChangeQuery} />\n        <ImageGallery\n          images={this.state.images}\n          onImageClick={this.handleImageClick}\n        />\n        {this.state.isLoading && <Loader />}\n        {this.onLoadMoreButtonShow() && !this.state.isLoading && (\n          <Button onSubmit={this.fetchImages} />\n        )}\n        {this.state.showModal && (\n          <Modal\n            onClose={this.toggleModal}\n            img={this.state.currentImg[0].largeImageURL}\n          ></Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}